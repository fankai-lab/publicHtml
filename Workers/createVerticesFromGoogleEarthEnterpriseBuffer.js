/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.116
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as Gt,b as Xt}from"./chunk-JCJ24DHF.js";import{a as kt}from"./chunk-SUQM3OSW.js";import{a as lt}from"./chunk-EXBFEYPQ.js";import{a as Dt}from"./chunk-UBIRX2SP.js";import"./chunk-C6DMEJQ7.js";import"./chunk-VMSXG4OA.js";import{a as qt}from"./chunk-7VZHIB6P.js";import"./chunk-6AUUBDOF.js";import"./chunk-BOPB43LN.js";import{d as zt,h as Lt}from"./chunk-DXEZYE3K.js";import"./chunk-VAKC5J5C.js";import"./chunk-VKV642QV.js";import{b as $,c as Ot}from"./chunk-DGCK3LD2.js";import"./chunk-B2SKQ7LU.js";import{a as P,b as N,c as wt,d as Ht}from"./chunk-CUOR5F7T.js";import{a as r}from"./chunk-74N6MC2V.js";import"./chunk-CSISXEG7.js";import{a as Vt}from"./chunk-VHNZBQTR.js";import{a as Ut}from"./chunk-NPBZI5YA.js";import"./chunk-7X2YQ6I4.js";import{e as ht}from"./chunk-R2AN7EKC.js";var te=Uint16Array.BYTES_PER_ELEMENT,mt=Int32Array.BYTES_PER_ELEMENT,Pt=Uint32Array.BYTES_PER_ELEMENT,ee=Float32Array.BYTES_PER_ELEMENT,H=Float64Array.BYTES_PER_ELEMENT;function tt(t,e,n){n=Ut(n,r);let i=t.length;for(let o=0;o<i;++o)if(n.equalsEpsilon(t[o],e,r.EPSILON12))return o;return-1}function oe(t,e){t.ellipsoid=Ht.clone(t.ellipsoid),t.rectangle=Ot.clone(t.rectangle);let n=se(t.buffer,t.relativeToCenter,t.ellipsoid,t.rectangle,t.nativeRectangle,t.exaggeration,t.exaggerationRelativeHeight,t.skirtHeight,t.includeWebMercatorT,t.negativeAltitudeExponentBias,t.negativeElevationThreshold),i=n.vertices;e.push(i.buffer);let r=n.indices;return e.push(r.buffer),{vertices:i.buffer,indices:r.buffer,numberOfAttributes:n.encoding.stride,minimumHeight:n.minimumHeight,maximumHeight:n.maximumHeight,boundingSphere3D:n.boundingSphere3D,orientedBoundingBox:n.orientedBoundingBox,occludeePointInScaledSpace:n.occludeePointInScaledSpace,encoding:n.encoding,vertexCountWithoutSkirts:n.vertexCountWithoutSkirts,indexCountWithoutSkirts:n.indexCountWithoutSkirts,westIndicesSouthToNorth:n.westIndicesSouthToNorth,southIndicesEastToWest:n.southIndicesEastToWest,eastIndicesNorthToSouth:n.eastIndicesNorthToSouth,northIndicesWestToEast:n.northIndicesWestToEast}}var u=new N,G=new P,ne=new P,ie=new P,re=new $;function se(t,e,n,i,o,a,s,l,h,c,m){let d,g,p,I,E,f;ht(i)?(d=i.west,g=i.south,p=i.east,I=i.north,E=i.width,f=i.height):(d=r.toRadians(o.west),g=r.toRadians(o.south),p=r.toRadians(o.east),I=r.toRadians(o.north),E=r.toRadians(i.width),f=r.toRadians(i.height));let T,S,x=[g,I],w=[d,p],k=Lt.eastNorthUpToFixedFrame(e,n),A=$.inverseTransformation(k,re);h&&(T=lt.geodeticLatitudeToMercatorAngle(g),S=1/(lt.geodeticLatitudeToMercatorAngle(I)-T));let B=1!==a,b=new DataView(t),R=Number.POSITIVE_INFINITY,y=Number.NEGATIVE_INFINITY,M=ne;M.x=Number.POSITIVE_INFINITY,M.y=Number.POSITIVE_INFINITY,M.z=Number.POSITIVE_INFINITY;let F=ie;F.x=Number.NEGATIVE_INFINITY,F.y=Number.NEGATIVE_INFINITY,F.z=Number.NEGATIVE_INFINITY;let v,C,_=0,j=0,V=0;for(C=0;C<4;++C){let t=_;v=b.getUint32(t,!0),t+=Pt;let e=r.toRadians(180*b.getFloat64(t,!0));t+=H,-1===tt(w,e)&&w.push(e);let n=r.toRadians(180*b.getFloat64(t,!0));t+=H,-1===tt(x,n)&&x.push(n),t+=2*H;let i=b.getInt32(t,!0);t+=mt,j+=i,i=b.getInt32(t,!0),V+=3*i,_+=v+Pt}let U=[],O=[],Y=new Array(j),W=new Array(j),L=new Array(j),D=h?new Array(j):[],X=B?new Array(j):[],Q=new Array(V),K=[],z=[],J=[],Z=[],q=0,et=0;for(_=0,C=0;C<4;++C){v=b.getUint32(_,!0),_+=Pt;let t=_,e=r.toRadians(180*b.getFloat64(_,!0));_+=H;let i=r.toRadians(180*b.getFloat64(_,!0));_+=H;let o=r.toRadians(180*b.getFloat64(_,!0)),a=.5*o;_+=H;let s=r.toRadians(180*b.getFloat64(_,!0)),l=.5*s;_+=H;let E=b.getInt32(_,!0);_+=mt;let f=b.getInt32(_,!0);_+=mt,_+=mt;let k=new Array(E);for(let H=0;H<E;++H){let t=e+b.getUint8(_++)*o;u.longitude=t;let E=i+b.getUint8(_++)*s;u.latitude=E;let f=b.getFloat32(_,!0);if(_+=ee,0!==f&&f<m&&(f*=-Math.pow(2,c)),f*=6371010,u.height=f,-1!==tt(w,t)||-1!==tt(x,E)){let t=tt(U,u,N);if(-1!==t){k[H]=O[t];continue}U.push(N.clone(u)),O.push(q)}k[H]=q,Math.abs(t-d)<a?K.push({index:q,cartographic:N.clone(u)}):Math.abs(t-p)<a?J.push({index:q,cartographic:N.clone(u)}):Math.abs(E-g)<l?z.push({index:q,cartographic:N.clone(u)}):Math.abs(E-I)<l&&Z.push({index:q,cartographic:N.clone(u)}),R=Math.min(f,R),y=Math.max(f,y),L[q]=f;let v=n.cartographicToCartesian(u);if(Y[q]=v,h&&(D[q]=(lt.geodeticLatitudeToMercatorAngle(E)-T)*S),B){let t=n.geodeticSurfaceNormal(v);X[q]=t}$.multiplyByPoint(A,v,G),P.minimumByComponent(G,M,M),P.maximumByComponent(G,F,F);let C=(t-d)/(p-d);C=r.clamp(C,0,1);let j=(E-g)/(I-g);j=r.clamp(j,0,1),W[q]=new wt(C,j),++q}let C=3*f;for(let n=0;n<C;++n,++et)Q[et]=k[b.getUint16(_,!0)],_+=te;if(v!==_-t)throw new Vt("Invalid terrain tile.")}Y.length=q,W.length=q,L.length=q,h&&(D.length=q),B&&(X.length=q);let nt=q,it=et,rt={hMin:R,lastBorderPoint:void 0,skirtHeight:l,toENU:A,ellipsoid:n,minimum:M,maximum:F};K.sort((function(t,e){return e.cartographic.latitude-t.cartographic.latitude})),z.sort((function(t,e){return t.cartographic.longitude-e.cartographic.longitude})),J.sort((function(t,e){return t.cartographic.latitude-e.cartographic.latitude})),Z.sort((function(t,e){return e.cartographic.longitude-t.cartographic.longitude}));let ot=1e-5;if(gt(Y,L,W,D,X,Q,rt,K,-ot*E,!0,-ot*f),gt(Y,L,W,D,X,Q,rt,z,-ot*f,!1),gt(Y,L,W,D,X,Q,rt,J,ot*E,!0,ot*f),gt(Y,L,W,D,X,Q,rt,Z,ot*f,!1),K.length>0&&Z.length>0){let t=K[0].index,e=nt,n=Z[Z.length-1].index,i=Y.length-1;Q.push(n,i,e,e,t,n)}j=Y.length;let at,ut=zt.fromPoints(Y);ht(i)&&(at=Dt.fromRectangle(i,R,y,n));let st=new Gt(n).computeHorizonCullingPointPossiblyUnderEllipsoid(e,Y,R),ct=new qt(M,F,e),dt=new Xt(e,ct,rt.hMin,y,k,!1,h,B,a,s),pt=new Float32Array(j*dt.stride),It=0;for(let r=0;r<j;++r)It=dt.encode(pt,It,Y[r],W[r],L[r],void 0,D[r],X[r]);let Et=K.map((function(t){return t.index})).reverse(),Nt=z.map((function(t){return t.index})).reverse(),ft=J.map((function(t){return t.index})).reverse(),Tt=Z.map((function(t){return t.index})).reverse();return Nt.unshift(ft[ft.length-1]),Nt.push(Et[0]),Tt.unshift(Et[Et.length-1]),Tt.push(ft[0]),{vertices:pt,indices:new Uint16Array(Q),maximumHeight:y,minimumHeight:R,encoding:dt,boundingSphere3D:ut,orientedBoundingBox:at,occludeePointInScaledSpace:st,vertexCountWithoutSkirts:nt,indexCountWithoutSkirts:it,westIndicesSouthToNorth:Et,southIndicesEastToWest:Nt,eastIndicesNorthToSouth:ft,northIndicesWestToEast:Tt}}function gt(t,e,n,i,o,a,s,l,h,c,m){let d=l.length;for(let g=0;g<d;++g){let p=l[g],I=p.cartographic,E=p.index,f=t.length,T=I.longitude,S=I.latitude;S=r.clamp(S,-r.PI_OVER_TWO,r.PI_OVER_TWO);let x=I.height-s.skirtHeight;s.hMin=Math.min(s.hMin,x),N.fromRadians(T,S,x,u),c&&(u.longitude+=h),c?g===d-1?u.latitude+=m:0===g&&(u.latitude-=m):u.latitude+=h;let w=s.ellipsoid.cartographicToCartesian(u);t.push(w),e.push(x),n.push(wt.clone(n[E])),i.length>0&&i.push(i[E]),o.length>0&&o.push(o[E]),$.multiplyByPoint(s.toENU,w,G);let k=s.minimum,A=s.maximum;P.minimumByComponent(G,k,k),P.maximumByComponent(G,A,A);let B=s.lastBorderPoint;if(ht(B)){let t=B.index;a.push(t,f-1,f,f,E,t)}s.lastBorderPoint=p}}var Ae=kt(oe);export{Ae as default};