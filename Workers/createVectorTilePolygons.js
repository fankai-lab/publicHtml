/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.116
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as R}from"./chunk-HPBHKP5S.js";import{a as It}from"./chunk-SUQM3OSW.js";import{a as M}from"./chunk-UBIRX2SP.js";import{a as bt}from"./chunk-C6DMEJQ7.js";import"./chunk-VMSXG4OA.js";import"./chunk-7VZHIB6P.js";import"./chunk-6AUUBDOF.js";import"./chunk-BOPB43LN.js";import{a as W}from"./chunk-JEWHFDAA.js";import"./chunk-DXEZYE3K.js";import"./chunk-VAKC5J5C.js";import"./chunk-VKV642QV.js";import{c as z}from"./chunk-DGCK3LD2.js";import"./chunk-B2SKQ7LU.js";import{a as o,b as nt,d as j}from"./chunk-CUOR5F7T.js";import{a as et}from"./chunk-74N6MC2V.js";import"./chunk-CSISXEG7.js";import"./chunk-VHNZBQTR.js";import"./chunk-NPBZI5YA.js";import"./chunk-7X2YQ6I4.js";import{e as A}from"./chunk-R2AN7EKC.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,o=2+r*M.packedLength+1+Tt(n),a=new Float64Array(o),i=0;a[i++]=t,a[i++]=r;for(let f=0;f<r;++f)M.pack(e[f],a,i),i+=M.packedLength;let s=n.length;a[i++]=s;for(let f=0;f<s;++f){let t=n[f];R.pack(t.color,a,i),i+=R.packedLength,a[i++]=t.offset,a[i++]=t.count;let e=t.batchIds,r=e.length;a[i++]=r;for(let n=0;n<r;++n)a[i++]=e[n]}return a}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),c=new Array(a.length),h=kt,l=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,k=t.maximumHeights;A(d)&&A(k)&&(d=new Float32Array(d),k=new Float32Array(k));let g,I,w,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let j=new Float64Array(3*b);for(g=0;g<b;++g){let t=y[g],e=N[g],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=l.cartographicToCartesian(a,wt);o.pack(i,j,3*g)}let x=a.length,L=new Array(x),T=new Array(x),B=0,S=0;for(g=0;g<x;++g)L[g]=B,T[g]=S,B+=a[g],S+=i[g];let U=new Float32Array(3*b*2),O=new Uint16Array(2*b),P=new Uint32Array(T.length),C=new Uint32Array(i.length),F=[],V={};for(g=0;g<x;++g)w=f[g],A(V[w])?(V[w].positionLength+=a[g],V[w].indexLength+=i[g],V[w].batchIds.push(g)):V[w]={positionLength:a[g],indexLength:i[g],offset:0,indexOffset:0,batchIds:[g]};let D,H=0,G=0;for(w in V)if(V.hasOwnProperty(w)){D=V[w],D.offset=H,D.indexOffset=G;let t=2*D.positionLength,e=2*D.indexLength+6*D.positionLength;H+=t,G+=e,D.indexLength=e}let Y=[];for(w in V)V.hasOwnProperty(w)&&(D=V[w],Y.push({color:R.fromRgba(parseInt(w)),offset:D.indexOffset,count:D.indexLength,batchIds:D.batchIds}));for(g=0;g<x;++g){w=f[g],D=V[w];let t=D.offset,e=3*t,r=t,b=L[g],y=a[g],E=s[g],N=m,x=p;A(d)&&A(k)&&(N=d[g],x=k[g]);let B=Number.POSITIVE_INFINITY,S=Number.NEGATIVE_INFINITY,R=Number.POSITIVE_INFINITY,H=Number.NEGATIVE_INFINITY;for(I=0;I<y;++I){let t=o.unpack(j,3*b+3*I,wt);l.scaleToGeodeticSurface(t,t);let n=l.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;B=Math.min(a,B),S=Math.max(a,S),R=Math.min(i,R),H=Math.max(i,H);let s=l.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,N,St),c=o.add(t,f,Ut);f=o.multiplyByScalar(s,x,f);let u=o.add(t,f,Ft);o.subtract(u,h,u),o.subtract(c,h,c),o.pack(u,U,e),o.pack(c,U,e+3),O[r]=E,O[r+1]=E,e+=6,r+=2}u=Mt,u.west=R,u.east=H,u.south=B,u.north=S,c[g]=M.fromRectangle(u,m,p,l);let G=D.indexOffset,Y=T[g],_=i[g];for(P[g]=G,I=0;I<_;I+=3){let e=n[Y+I]-b,r=n[Y+I+1]-b,o=n[Y+I+2]-b;F[G++]=2*e+t,F[G++]=2*r+t,F[G++]=2*o+t,F[G++]=2*o+1+t,F[G++]=2*r+1+t,F[G++]=2*e+1+t}for(I=0;I<y;++I){let e=I,n=(I+1)%y;F[G++]=2*e+1+t,F[G++]=2*n+t,F[G++]=2*e+t,F[G++]=2*e+1+t,F[G++]=2*n+1+t,F[G++]=2*n+t}D.offset+=2*y,D.indexOffset=G,C[g]=G-P[g]}F=W.createTypedArray(U.length/3,F);let _=Y.length;for(let o=0;o<_;++o){let t=Y[o].batchIds,e=0,n=t.length;for(let r=0;r<n;++r)e+=C[t[r]];Y[o].count=e}let K=2===F.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,v=Ct(K,c,Y);return e.push(U.buffer,F.buffer,P.buffer,C.buffer,O.buffer,v.buffer),{positions:U.buffer,indices:F.buffer,indexOffsets:P.buffer,indexCounts:C.buffer,batchIds:O.buffer,packedBuffer:v.buffer}}var Jt=It(Rt);export{Jt as default};